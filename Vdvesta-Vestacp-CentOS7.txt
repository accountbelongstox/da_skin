# 磁盘挂载(如果有)
```
ll /dev/disk/by-path
fdisk /dev/vdb
Command(m for help): (输入n)
Partition type:
(选择p)
Partition number (1-4, default 1):
(选择1) 只分成1个分区
#接下来都选择default
Command(m for help): 
(输入w) 写入分区表，进行分区
#格式化
mkfs.ext4 /dev/vdb1
mkfs -t ext4 /dev/vdb1

#挂载硬盘  
vi /etc/fstab 
/dev/vdb1 /home ext4 defaults 1 1

```



CentOS 7
前置工作
先解析域名到指定服务器.

1):升级
vim /etc/ssh/sshd_config
#连接超时设置

echo 'ClientAliveInterval 60' >> /etc/ssh/sshd_config && echo 'ClientAliveCountMax 86400' >> /etc/ssh/sshd_config


echo 'TMOUT=1200' >> /etc/profile && source /etc/profile

#升级软件
yum update -y
yum install yum-utils yum-priorities vim-minimal subversion curl zip unzip -y
yum install telnet wget -y

yum install openssl098e.i686 glibc.i686 libstdc++.i686
yum -y install dos2unix patch screen unzip lftp tarquota

yum install wget gcc gcc-c++ flex bison make bind bind-libs bind-utils openssl openssl-devel perl quota libaio libcom_err-devel libcurl-devel gd zlib-devel zip unzip libcap-devel cronie bzip2 cyrus-sasl-devel perl-ExtUtils-Embed autoconf automake libtool which patch mailx bzip2-devel db4-devel libnspr4.so libssl.so.6 libstdc++.so.6

yum install python-pip
yum -y install epel-release
pip install shadowsocks
yum -y install privoxy

cd /usr/local/src && wget https://www.rarlab.com/rar/rarlinux-x64-5.6.b2.tar.gz
tar -xzvf rarlinux-x64-5.6.b2.tar.gz
mv rar ../ && cd ../ && ln -s /usr/local/rar/rar /usr/local/bin/rar &&  ln -s /usr/local/rar/unrar /usr/local/bin/unrar

setenforce 0
echo 'SELINUX=disabled' > /etc/selinux/config


#设置 HOSTNAME
hostnamectl set-hostname www.ylgj66688.com
hostnamectl --pretty && hostnamectl --static && hostnamectl --transient

vim /etc/sysconfig/network
# 加入
HOSTNAME=www.ylgj66688.com

#设置hosts,将原来的hostname更换为 www.ylgj66688.com
vim /etc/hosts
#修改 hostname,将原来的hostname更换为 www.ylgj66688.com

# 设置yum
vim /etc/yum.conf
#修改超时时间
timeout=300
keepcache=1
plugins=0
#修改
vim /etc/yum/pluginconf.d/fastestmirror.conf
enabled=0

reboot -f

# 添加虚拟内存(重启后会消失)
##首先查看当前的内存和swap 空间大小(默认单位为k, -m 单位为M)：
free -m
##查看swap信息，包括文件和分区的详细信息
swapon -s
或者
cat /proc/swaps
##如果都没有，我们就需要手动添加交换分区
##使用dd命令创建一个swap交换文件
dd if=/dev/zero of=/home/swap bs=1024 count=1024000
##制作为swap格式文件：
mkswap /home/swap
##再用swapon命令把这个文件分区挂载swap分区
/sbin/swapon /home/swap
##我们用命令看一下
free -m


#安装VestaCP
方案一: 原版VestaCP 
cd /usr/local/src && curl -O http://vestacp.com/pub/vst-install.sh
bash vst-install.sh --nginx no --apache yes --phpfpm no --named yes --remi yes --vsftpd no --proftpd yes --iptables yes --fail2ban no --quota yes --exim yes --dovecot yes --spamassassin yes --clamav yes --softaculous yes --mysql yes --postgresql no
#升级到PHP7.1(laravel框架)
ll /etc/yum.repos.d
cd /usr/local/src && wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
wget http://rpms.remirepo.net/enterprise/remi-release-7.rpm
rpm -Uvh remi-release-7.rpm 
rpm -Uvh epel-release-latest-7.noarch.rpm
yum -y --enablerepo=remi update remi-release
systemctl stop php-fpm
systemctl stop httpd
yum -y remove php
#PHP71
yum -y --enablerepo=remi-php71 install php php-pear php-bcmath php-mysqlnd php-gd php-common php-fpm php-intl php-cli php-xml php-pecl-apcu php-pdo php-gmp php-process php-pecl-imagick php-devel php-mbstring
yum -y --enablerepo=remi-php71 install php-opcache php-memcache
#PHP70
yum -y --enablerepo=remi-php70 install php70-php php70-php-pear php70-php-bcmath php70-php-pecl-jsond-devel php70-php-mysqlnd php70-php-gd php70-php-common php70-php-fpm php70-php-intl php70-php-cli php70-php php70-php-xml php70-php-opcache php70-php-pecl-apcu php70-php-pecl-jsond php70-php-pdo php70-php-gmp php70-php-process php70-php-pecl-imagick php70-php-devel php70-php-mbstring
yum -y --enablerepo=remi-php70 install php-opcache php-memcache
php -v
rm -rf /usr/bin/php
ln -s /usr/bin/php70 /usr/bin/php
systemctl start php-fpm
systemctl start httpd
#使用此模式建站时
Web TemplateHTTPD 要设置为 phpcfig 

方案二: 修改版VestaCP
cd /usr/local/src && curl -L https://github.com/duy13/VDVESTA/raw/master/vdvesta.sh -o vdvesta.sh && bash vdvesta.sh
#安装设置
1.Would you like +install vDDoS Proxy Protection [Y|n]: N(选择不安装DDOS)
2.PHP 安装为all
3.Would you like Configure Kernel limit DDOS 配置限制DDOS 为N 

```
#email address:
v@01266.vip
#hostname
www.ylgj66688.com
```

#后置工作 (重要)

1.设置阿里云安全组 放行8082,8082端口,配置后台vsftpd端口组为12100:32000
  #设置后台为中文
  mv /usr/local/vesta/web/inc/i18n/en.php /usr/local/vesta/web/inc/i18n/english.php
  cp /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/en.php
  rm -rf /usr/local/vesta/web/inc/i18n/de.php
  cp /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/de.php
  rm -rf /usr/local/vesta/web/inc/i18n/cz.php
  cp /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/cz.php
  rm -rf /usr/local/vesta/web/inc/i18n/da.php
  cp /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/da.php
  \cp -rf /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/el.php
  \cp -rf /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/es.php
  \cp -rf /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/hu.php
  \cp -rf /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/it.php
  \cp -rf /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/nl.php
  \cp -rf /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/no.php
  \cp -rf /usr/local/vesta/web/inc/i18n/cn.php /usr/local/vesta/web/inc/i18n/se.php
  #编辑模板
  cd /usr/local/vesta/data/templates/web/skel/public_html
  cd /usr/local/vesta/data/templates/web/skel/public_shtml
  cd /usr/local/vesta/data/templates/web/skel/document_errors 
2.关闭防火墙

systemctl stop iptables
systemctl disable iptables
sudo yum install iptables-services iptables-devel
systemctl stop firewalld
systemctl disable firewalld
firewall-cmd --set-default-zone=public
firewall-cmd --zone=public --add-port=21-22/tcp --permanent
firewall-cmd --zone=public --add-port=80/tcp --permanent
firewall-cmd --zone=public --add-port=443/tcp --permanent
firewall-cmd --zone=public --add-port=8082-8083/tcp --permanent
firewall-cmd --zone=public --add-port=12100-32000/tcp --permanent
firewall-cmd --reload


3.安装ioncube
	cd /usr/local/lib64
	wget http://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz
	tar -xzvf ioncube_loaders_lin_x86-64.tar.gz
	rm -rf ioncube_loaders_lin_x86-64.tar.gz
	cd ioncube
	chown root.root -R ./
	chmod +x -R ./
* * *
	echo -e "[ioncube loader]\nzend_extension = /usr/local/lib64/ioncube/ioncube_loader_lin_5.4.so" > /opt/remi/php54/root/etc/php.d/00-ioncube.ini
* * *
	echo -e "[ioncube loader]\nzend_extension = /usr/local/lib64/ioncube/ioncube_loader_lin_5.5.so" > /opt/remi/php55/root/etc/php.d/00-ioncube.ini
* * *
	echo -e "[ioncube loader]\nzend_extension = /usr/local/lib64/ioncube/ioncube_loader_lin_5.6.so" > /opt/remi/php56/root/etc/php.d/00-ioncube.ini
* * *
	echo -e "[ioncube loader]\nzend_extension = /usr/local/lib64/ioncube/ioncube_loader_lin_7.0.so" > /etc/opt/remi/php70/php.d/00-ioncube.ini
* * *
	echo -e "[ioncube loader]\nzend_extension = /usr/local/lib64/ioncube/ioncube_loader_lin_7.1.so" > /etc/opt/remi/php71/php.d/00-ioncube.ini

4.对接whmcs
	#进入whcms_web/modules/servers/
	mkdir vesta
	wget http://c.vestacp.com/0.9.8/rhel/whmcs-module.php -O vesta.php
	#1):服务器使用ssl连接
5.自动部署ssl证书
	yum install git -y
	yum install certbot
	cd /usr/local
	git clone https://github.com/letsencrypt/letsencrypt.git
	git clone https://github.com/interbrite/letsencrypt-vesta.git
	mkdir -p /etc/letsencrypt/webroot
	ln -s /usr/local/letsencrypt-vesta/letsencrypt.conf /etc/httpd/conf.d/letsencrypt.conf
	ln -s /usr/local/letsencrypt/letsencrypt-auto /usr/local/bin/letsencrypt-auto
	ln -s /usr/local/letsencrypt-vesta/letsencrypt-vesta /usr/local/bin/letsencrypt-vesta
	
	service httpd restart
	
	cd /usr/local/
	mkdir certbot
	cd certbot
	wget https://dl.eff.org/certbot-auto
	chmod a+x certbot-auto
	
	certbot-auto certonly -a webroot --webroot-path=/home/user/web/businessofbrands.co.uk/public_html -d www.businessofbrands.co.uk -d cdn.businessofbrands.co.uk -d mail.businessofbrands.co.uk
	
	service httpd restart
	
## 生成证书
	/usr/local/letsencrypt-vesta/letsencrypt-vesta admin qun1.mryangping.com
	/usr/local/letsencrypt-vesta/letsencrypt-vesta admin qun2.mryangping.com
	/usr/local/letsencrypt-vesta/letsencrypt-vesta admin qun3.mryangping.com
	
## 证书地址
	cd /etc/letsencrypt/live
	
## 证书说明
	1.域名要使用www.linode.com DNS 否则获取不到证书
	2.vestecp后台勾选 Let's Encrypt 支持
	
#mariadb my.cnf
[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
symbolic-links=0

skip-external-locking
key_buffer_size = 128K
max_allowed_packet = 16M
table_open_cache = 65535
sort_buffer_size = 4M
read_buffer_size = 2M
read_rnd_buffer_size = 8M
net_buffer_length = 2K
thread_stack = 240K

#innodb_use_native_aio = 0
innodb_file_per_table

max_connections=600
max_user_connections=500
wait_timeout=28800
interactive_timeout=50
long_query_time=0.5

#slow_query_log=1
#slow_query_log_file=/var/log/mysql-slow-queries.log

[mysqld_safe]
log-error=/var/log/mariadb/mariadb.log
pid-file=/var/run/mariadb/mariadb.pid
!includedir /etc/my.cnf.d

#---------------------------------------------------------------

#为了数据库的稳定.删除
rm -rf /var/lib/mysql/ib_logfile0
rm -rf /var/lib/mysql/ib_logfile1
#ib_logfile0和ib_logfile1
设置客户端：

vim /etc/my.cnf.d/mysql-clients.cnf
#加入
[mysql]
default-character-set=utf8

vim /etc/my.cnf
#加入
[mysqld]
init_connect='SET collation_connection = utf8_general_ci'
 29 init_connect='SET NAMES utf8'
 30 character-set-server=utf8
 31 collation-server=utf8_general_ci
 32 skip-character-set-client-handshake
 33
 34 #开启慢查询
 35 slow_query_log = ON
 36 slow_query_log_file = /var/log/mariadb/data_slow.log
 37 long_query_time = 1

	
#其他说明 配置文件
Config and log locations on a RHEL and CentOS
Service	Config	Log
Apache	/etc/httpd/conf/httpd.conf
/etc/httpd/conf.d/*
/home/$user/conf/web/httpd.conf
/home/$user/conf/web/shttpd.conf (ssl)	/var/log/httpd/access_log
/var/log/httpd/error_log
/var/log/httpd/domains/$domain.log
/var/log/httpd/domains/$domain.error.log
PHP	/etc/php.ini
/etc/php.d/*	/var/log/httpd/domains/$domain.error.log
Nginx	/etc/nginx/nginx.conf
/etc/nginx/conf.d/*
/home/$user/conf/web/nginx.conf
/home/$user/conf/web/snginx.conf (ssl)	/var/log/nginx/access.log
/var/log/nginx/error.log
/var/log/httpd/domains/$domain.log
/var/log/httpd/domains/$domain.error.log
Named	/etc/named.conf
/home/$user/conf/dns/$domain.db	/var/log/messages
Exim	/etc/exim/exim.conf
/home/$user/conf/mail/$domain/*	/var/log/exim/main.log
/var/log/exim/reject.log
/var/log/exim/panic.log
Dovecot	/etc/dovecot/dovecot.conf
/etc/dovecot/conf.d/*
/etc/dovecot.conf (rhel5/centos5)
/home/$user/conf/mail/$domain/passwd	/var/log/dovecot.log
ClamAV	/etc/clamd.conf
/etc/freshclam.conf	/var/log/clamav/clamd.log
/var/log/clamav/freshclam.log
/var/log/messages
/var/log/exim/main.log
SpamAssassin	/etc/mail/spamassassin/local.cf	/var/log/exim/main.log
Roundcube	/etc/roundcubemail/main.inc.php
/etc/roundcubemail/db.inc.php
/etc/httpd/conf.d/roundcubemail.conf	/var/log/roundcubemail/*
/var/log/httpd/domains/$domain.log
/var/log/httpd/domains/$domain.error.log
MySQL	/etc/my.cnf
/root/.my.cnf
/usr/local/vesta/conf/mysql.conf	/var/log/mysqld.log
phpMyAdmin	/etc/phpMyAdmin/config.inc.php
/etc/httpd/conf.d/phpMyAdmin.conf	/var/log/httpd/domains/$domain.log
/var/log/httpd/domains/$domain.error.log
PostgreSQL	/var/lib/pgsql/data/postgresql.conf
/var/lib/pgsql/data/pg_hba.conf
/usr/local/vesta/conf/pgsql.conf	/var/lib/pgsql/pgstartup.log
phpPgAdmin	/etc/phpPgAdmin/config.inc.php
/etc/httpd/conf.d/phpPgAdmin.conf	/var/log/httpd/domains/$domain.log
/var/log/httpd/domains/$domain.error.log
Vsftpd	/etc/vsftpd/vsftpd.conf	/var/log/xferlog
/var/log/messages
Vesta	/usr/local/vesta/conf/vesta.conf
/usr/local/vesta/conf/mysql.conf
/usr/local/vesta/conf/pgsql.conf
/usr/local/vesta/conf/ftp.backup.conf
/usr/local/vesta/conf/dns-cluster.conf
/usr/local/vesta/nginx/conf/nginx.conf
/usr/local/vesta/php/lib/php.ini
/usr/local/vesta/php/etc/php-fpm.conf	/var/log/vesta/system.log
/var/log/vesta/backup.log
/var/log/vesta/auth.log
/var/log/vesta/nginx-error.log
/usr/local/vesta/php/var/log/php-fpm.log

# tool
## 修改密码
	/usr/local/vesta/bin/v-change-user-password admin yangpingpwd